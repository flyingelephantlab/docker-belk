input {
    tcp {
        port => 5000
        codec => multiline {
            pattern => "^%{TIMESTAMP_ISO8601} "
            negate => true
            what => previous
        }
    }
    file {
        path => "/var/kipp/logs/temp/**/*.log"
        codec => multiline {
            pattern => "^%{TIMESTAMP_ISO8601} "
            negate => true
            what => previous
        }
        sincedb_path => "/dev/null"
        start_position => "beginning"
    }
}



filter {
	grok {
    	match => ["path","%{GREEDYDATA}/%{GREEDYDATA:merchant_name}/%{GREEDYDATA}\.log"]
  	}
  	mutate{
			add_field => { "status" => "Running" }
	}
	grok{
	    match => [ "message", "%{DATE_EU:timestamp}" ]
	}

	date{
   	 	match => [ "timestamp", "yy-MM-dd" ]
   		target => "@timestamp"	
   	}
	
	if "Dumping Scrapy stats" in [message] {

		## Scraped items, invalid items
		grok{
				match => [ "message", "'item_scraped_count': %{NUMBER:scraped_items:int}" ]
		}
		grok{
				match => [ "message", "'invalid_items_count': %{NUMBER:invalid_items:int}" ]
		}
		mutate{
   				update => { "status" => "Finished" }
  		} 
  			
	}

	else{
		grok{
				match => [ "message", "Crawled iteration for merchant %{WORD:merchant_name2} started" ]
			}	
	}



	if "_grokparsefailure" in [tags] {            
		drop { }
	}
	else {
	aggregate {
	        task_id => "%{@timestamp}_%{merchant_name}"
	        code => "
	         map['clicks'] ||= 0; map['clicks'] += 1; map['merchant_name'] = event.get('merchant_name'); map['status'] = event.get('status'); map['crawl_date'] = event.get('@timestamp'); map['scraped_items'] = event.get('scraped_items'); map['invalid_items'] = event.get('invalid_items'); event.cancel();
	        "
	        push_previous_map_as_event => true
   		}
	}

	if "_aggregatefinalflush" in [tags] {
		date{
	   	 	match => [ "crawl_date", "yy-MM-dd" ]
	   		target => "@timestamp"	
	   	}
	}
	
}


output {
	if "_grokparsefailure" not in [tags]{
		stdout {
			codec => rubydebug
		}

		elasticsearch {
			hosts => "elasticsearch:9200"
			index => "logstash-%{merchant_name}"
		}

	}
}
